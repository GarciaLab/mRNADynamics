function singleGaussian = gaussianForSpot(y, x, snippet)

    %fits: [amplitude, x position, x width, y position, y width, offset, angle, linear offset x, linear offset y] 

    % to do- rewrite the parameters in terms of a covariance matrix: sigma
    % = { {sigma_x^2, rho*sigma_x*sigma_y  }, {rho*sigma_x*sigma_y,sigma_y^2} }
    singleGaussian = @(params) (params(1).*...
    exp(-(...
    (((cos(params(7)))^2 / (2*params(3)^2) ) + ((sin(params(7)))^2 / (2*params(5)^2)))  .* (x-params(2)).^2 ...
    - 2*((-sin(2*params(7)) / (4*params(3)^2) ) + (sin(2*params(7)) / (4*params(5)^2))) .* (x-params(2)).*(y-params(4))...
    + (((sin(params(7)))^2 / (2*params(3)^2) ) + ((cos(params(7)))^2 / (2*params(5)^2))).* (y-params(4)).^2 ...
        )))...
    + params(6) + params(8).*x + params(9).*y - double(snippet);
     

    %fits: [amplitude, position vector, covariance matrix, offset vector)
    
    singleGaussianV2 = @(A, r, rho, sigma, off) A*exp(-1/(2*(1-rho^2))*(...
        ...
        (x-r(1)).^2/(2*sigma(1)^2) + (y-r(2)).^2/(2*sigma(2)^2) ...
        - 2*rho*(x-r(1)).*(y-r(2)) /  (sigma(1)*sigma(2) )...
        ))...  
        - offset(1) - offset(2)*mesh_x - offset(3)*mesh_y...
        - double(snippet);
    
    
end